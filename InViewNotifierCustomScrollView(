InViewNotifierCustomScrollView(
                controller: Config.scrollControllerHome,
                physics: const BouncingScrollPhysics(),
                initialInViewIds: const ['0'],
                isInViewPortCondition: (double deltaTop, double deltaBottom,
                    double viewPortDimension) {
                  return deltaTop < (0.5 * viewPortDimension) &&
                      deltaBottom > (0.5 * viewPortDimension);
                },
                slivers: [
                  SliverPadding(
                    padding: const EdgeInsets.symmetric(vertical: 0.0),
                    sliver: SliverList(
                      delegate: SliverChildListDelegate([
                        StoryPage(avatar: avatar),
                        const CustomDivider(),
                        BlocBuilder<PostContentCubit, PostContentState>(
                            builder: (context, state) {
                          print('disini state portcontent $state');
                          if (state is PostContentLoading) {
                            return Padding(
                              padding: const EdgeInsets.all(4.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Proses upload sedang berlangsung ...',
                                    style: TextStyle(
                                        color: Theme.of(context)
                                            .colorScheme
                                            .primary
                                            .withOpacity(.6)),
                                  ),
                                  const SizedBox(
                                    height: 5,
                                  ),
                                  LinearProgressIndicator(
                                    minHeight: 3,
                                    color: Theme.of(context)
                                        .primaryColor
                                        .withOpacity(.7),
                                    backgroundColor: Theme.of(context)
                                        .colorScheme
                                        .primary
                                        .withOpacity(.2),
                                  ),
                                ],
                              ),
                            );
                          }
                          return SizedBox.fromSize();
                        }),
                      ]),
                    ),
                  ),
                  if (state is ContentLoading &&
                      Utilitas.isInitialPage &&
                      !Utilitas.isRefreshPage)
                    SliverPadding(
                        padding: const EdgeInsets.symmetric(vertical: 4),
                        sliver: SliverList(
                            delegate: SliverChildBuilderDelegate(
                                (BuildContext context, int index) {
                          return const ContentLoader();
                        }, childCount: 6))),
                  SliverPadding(
                      padding: const EdgeInsets.symmetric(vertical: 4),
                      sliver: SuperSliverList(
                        delegate: SliverChildBuilderDelegate(
                          (context, index) {
                            if (result.length == index) {
                              return Padding(
                                padding:
                                    const EdgeInsets.only(top: 16, bottom: 16),
                                child: Center(
                                  child: LoadingWidget(
                                    leftcolor: Theme.of(context).primaryColor,
                                    rightcolor:
                                        Theme.of(context).colorScheme.primary,
                                  ),
                                ),
                              );
                            }
                            return InViewNotifierWidget(
                              id: '$index',
                              builder: (BuildContext context, bool isInView,
                                  Widget? child) {
                                bool isVideo = result[index]
                                    .pic!
                                    .where((e) =>
                                        e.file!
                                            .split('.')
                                            .last
                                            .toLowerCase()
                                            .extentionfile() ==
                                        'video')
                                    .isNotEmpty;
                                if (isVideo) {
                                  return VisibilityDetector(
                                    key: Key(index.toString()),
                                    onVisibilityChanged: (visibilityInfo) {
                                      var visiblePercentage =
                                          visibilityInfo.visibleFraction * 100;
                                      if (visiblePercentage > 76) {
                                        print(
                                            'Visible Detector  $index $visiblePercentage $isVideo');
                                      }
                                    },
                                    child: VideoPlayerWidget(
                                      datas: result,
                                      index: index,
                                      isFullScreen: false,
                                      play: isInView,
                                      resumed: false,
                                    ),
                                  );
                                } else {
                                  return PicturePlayerWidget(
                                    data: result[index],
                                    index: index,
                                    play: isInView,
                                    isFullScreen: false,
                                  );
                                }
                              },
                            );
                          },
                          childCount: Utilitas.isLoadMore
                              ? result.length + 1
                              : result.length,
                        ),
                      )),
                ],
              ),